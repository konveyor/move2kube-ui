apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-move2kubeapi"
  labels:
    move2kube.konveyor.io/service: "{{ .Release.Name }}-move2kubeapi"
spec:
  replicas: {{ .Values.deployment.api.replicas }}
  selector:
    matchLabels:
      move2kube.konveyor.io/service: "{{ .Release.Name }}-move2kubeapi"
  serviceName: "{{ .Release.Name }}-move2kubeapiheadless"
  template:
    metadata:
      name: "{{ .Release.Name }}-move2kubeapi"
      labels:
        move2kube.konveyor.io/service: "{{ .Release.Name }}-move2kubeapi"
    spec:
      {{- if and (.Values.deployment.api.initContainer) (.Values.persistentVolumeClaim.enable) }}
      initContainers:
        - name: change-perms
          image: quay.io/konveyor/busybox
          command: ["/bin/sh", "-c"]
          args:
            - 'chown -R "$(id -u)":root /move2kube-api/data && chmod -R 770 /move2kube-api/data'
          volumeMounts:
            - name: common-volume
              mountPath: /move2kube-api/data
              subPath: move2kube-api/data
      {{- end }}
      containers:
        - name: move2kubeapi
          image: "{{ .Values.deployment.api.imageName }}:{{ .Values.deployment.api.imageTag }}"
          command:
            - move2kube-api
          args:
            - '--host=$(MY_POD).$(MY_SERVICE)'
            - '--static-files-dir=build'
            {{- if .Values.secret.api.enable }}
            - '--config=config.yaml'
            {{- end }}
            {{- range .Values.deployment.api.extraArgs }}
            - '{{ . }}'
            {{- end }}
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: MY_POD
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_SERVICE
              value: "{{ .Release.Name }}-move2kubeapiheadless"
          {{- if .Values.deployment.api.privilegedPods }}
          securityContext:
            privileged: true
          {{- end }}
          volumeMounts:
            {{- if .Values.secret.api.enable }}
            - name: api-config
              mountPath: /move2kube-api/config.yaml
              subPath: config.yaml
              readOnly: true
            {{- end }}
            - name: common-volume
              mountPath: /move2kube-api/data
              {{- if .Values.persistentVolumeClaim.enable }}
              subPath: move2kube-api/data
              {{- end }}
            {{- if .Values.deployment.api.privilegedPods }}
            - mountPath: /var/lib/containers
              name: container-storage
            {{- end }}
          resources:
            limits:
              memory: "{{ .Values.deployment.api.memory }}"
              cpu: "{{ .Values.deployment.api.cpu }}"
      restartPolicy: Always
      volumes:
        {{- if .Values.secret.api.enable }}
        - name: api-config
          secret:
            secretName: '{{ .Values.secret.api.name | default (print .Release.Name "-move2kubeapi") }}'
        {{- end }}
        - name: common-volume
          {{- if .Values.persistentVolumeClaim.enable }}
          persistentVolumeClaim:
            claimName: '{{ .Values.persistentVolumeClaim.name | default (print .Release.Name "-move2kubeapi") }}'
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- if .Values.deployment.api.privilegedPods }}
        - name: container-storage
          emptyDir: {}
        {{- end }}
